#install.packages("gapminder")
library(dplyr)
library(gapminder)
gapminder # little risky to open a dataset without head() if you don't know it's a tibble!
install.packages("gapminder")
library(gapminder)
gapminder # little risky to open a dataset without head() if you don't know it's a tibble!
dfUniqueCountries <- gapminder %>%
group_by(continent) %>%
summarise(uniqueCountries = n_distinct(country))
dfUniqueCountries
gdp1997 <- gapminder %>%
filter(continent == "Europe" & year == 1997) %>%
arrange(gdpPercap)
gdp1997
avgLifeExp1980s <- gapminder %>%
filter(year %in% c(1980:1989)) %>%
group_by(continent) %>%
summarise(avgLifeExp = mean(lifeExp))
avgLifeExp1980s
totalGDP <- gapminder %>%
group_by(country) %>%
summarise(totalGDP = mean(gdpPercap)) %>%
arrange(desc(totalGDP))
totalGDP
lifeExp80Yrs <- gapminder %>%
select(country, lifeExp, year) %>%
filter(lifeExp >= 80)
lifeExp80Yrs
lifeExpGDP <- gapminder %>%
group_by(country) %>%
summarise(corLifeGDP = cor(lifeExp, gdpPercap)) %>%
arrange(desc(abs(corLifeGDP)))
lifeExpGDP
gapminder %>%
filter(continent != "Asia") %>% # remove Asia from the tibble
group_by(continent, year) %>% # group by every combination of continent and year
summarise(avgPop = mean(pop))
avgPop <- gapminder %>%
filter(continent != "Asia") %>% # remove Asia from the tibble
group_by(continent, year) %>% # group by every combination of continent and year
summarise(avgPop = mean(pop)) %>% # average population (across all countries) for each combination of continent and year
#ungroup() %>% # is this necessary here? tibble ends up the same with or without this ungroup()
arrange(desc(avgPop))
avgPop
avgPop <- gapminder %>%
filter(continent != "Asia") %>% # remove Asia from the tibble
group_by(continent, year) %>% # group by every combination of continent and year
summarise(avgPop = mean(pop)) %>% # average population (across all countries) for each combination of continent and year
ungroup() %>% # is this necessary here? tibble ends up the same with or without this ungroup()
arrange(desc(avgPop))
avgPop
populationSD <- gapminder %>%
group_by(country) %>%
summarise(popSD = sd(pop)) %>% # summarise standard deviation of population for all countries across all years
arrange(popSD)
populationSD
gm1992 <- gapminder %>%
mutate(popDelta = pop - lag(pop, order_by = year)) %>% # difference in pop by year
mutate(lifeExpDelta = lifeExp - lag(lifeExp, order_by = year)) # difference in life exp by year
gm1992
gm1992 <- gapminder %>%
arrange(year) %>% # not strictly necessary but useful to visualize
mutate(popDelta = pop - lag(pop, order_by = year)) %>% # difference in pop by year
mutate(lifeExpDelta = lifeExp - lag(lifeExp, order_by = year)) # difference in life exp by year
gm1992
gm1992 <- gapminder %>%
group_by(country) %>% # grouping by country
arrange(year) %>% # not strictly necessary but useful to visualize
mutate(popDelta = pop - lag(pop, order_by = year)) %>% # difference in pop by year
mutate(lifeExpDelta = lifeExp - lag(lifeExp, order_by = year)) # difference in life exp by year
gm1992
gm1992 <- gapminder %>%
group_by(country) %>% # grouping by country
#arrange(year) %>% # not strictly necessary but useful to visualize
mutate(popDelta = pop - lag(pop, order_by = year)) %>% # difference in pop by year
mutate(lifeExpDelta = lifeExp - lag(lifeExp, order_by = year)) # difference in life exp by year
gm1992
gm1992 <- gapminder %>%
group_by(country) %>% # grouping by country
mutate(popDelta = pop - lag(pop, order_by = year)) %>% # difference in pop by year
mutate(lifeExpDelta = lifeExp - lag(lifeExp, order_by = year)) %>% # difference in life exp by year
arrange(country, year) # not strictly necessary but useful to visualize
gm1992
View(gm1992)
specificObs %>%
filter(popDelta < 0 & lifeExpDelt >0) # filtering based on conditions specified
specificObs <- gapminder %>%
group_by(country) %>% # grouping by country
mutate(popDelta = pop - lag(pop, order_by = year)) %>% # difference in pop by year
mutate(lifeExpDelta = lifeExp - lag(lifeExp, order_by = year)) %>% # difference in life exp by year
arrange(country, year) # not strictly necessary but useful to visualize
specificObs %>%
filter(popDelta < 0 & lifeExpDelt >0) # filtering based on conditions specified
gapminder %>%
group_by(country) %>% # grouping by country
mutate(popDelta = pop - lag(pop, order_by = year)) %>% # difference in pop by year
mutate(lifeExpDelta = lifeExp - lag(lifeExp, order_by = year)) %>% # difference in life exp by year
arrange(country, year)
specificObs <- gapminder %>%
group_by(country) %>% # grouping by country
mutate(popDelta = pop - lag(pop, order_by = year)) %>% # difference in pop by year
mutate(lifeExpDelta = lifeExp - lag(lifeExp, order_by = year)) %>% # difference in life exp by year
arrange(country, year) # not strictly necessary but useful to visualize
specificObs %>%
filter(popDelta < 0 & lifeExpDelta >0) # filtering based on conditions specified
test = specificObs %>%
filter(popDelta < 0 & lifeExpDelta >0) # filtering based on conditions specified
specificObs %>%
filter(popDelta < 0 & lifeExpDelta >0) # filtering based on conditions specified
